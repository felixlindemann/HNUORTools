test()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.NW(geo)  #
 	x <- geo$transportplan
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.NW(geo)  #
 	x <- geo$transportplan
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.NW(geo)  #
 	x <- geo$transportplan
matrix()
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.NW(geo)  #
 	x <- geo$transportplan
x
test()
length(matrix)
check()
Setup is taken from: WS13/14 HNU OR-Tutorium#
# Working.Paper 2 Case Study 2 #
  geo<-HNUGeoSituation.create()#
  geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
  geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
  geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
  geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
  geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
  geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
  geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
  geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
  geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
  geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
#
  m<-getDistanceMatrix(geo,"warehouse", "customer")#
  m<-round(m)#
#
  length(geo$warehouses) ==4  # TRUE#
  length(geo$customers) ==9 # TRUE#
#
  nrow(m) ==4 # TRUE#
  ncol(m) ==9 # TRUE#
#
  m[1,1] == 61  # TRUE#
  m[1,2] == 36  # TRUE#
  m[3,4] == 50  # TRUE#
  m[4,6] == 73  # TRUE#
  m[2,4] + m[3,5] + m[4,2] == 335 # TRUE#
#
  m#
#
# demo(HNUTPP01)#
#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
 # solve with north-west corner rule#
  geo<- HNU.OR.TPP.NW(geo)   #
  x <- geo$transportplan # store transportplan in local variable#
  x[1,1] == 150   # TRUE#
  x[3,1] == 0     # TRUE#
  x[3,6] == 40    # TRUE#
  x[3,7] == 80    # TRUE#
  x[4,9] == 120   # TRUE#
# with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo)
load_all()
Setup is taken from: WS13/14 HNU OR-Tutorium#
# Working.Paper 2 Case Study 2 #
  geo<-HNUGeoSituation.create()#
  geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
  geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
  geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
  geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
  geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
  geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
  geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
  geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
  geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
  geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
#
  m<-getDistanceMatrix(geo,"warehouse", "customer")#
  m<-round(m)#
#
  length(geo$warehouses) ==4  # TRUE#
  length(geo$customers) ==9 # TRUE#
#
  nrow(m) ==4 # TRUE#
  ncol(m) ==9 # TRUE#
#
  m[1,1] == 61  # TRUE#
  m[1,2] == 36  # TRUE#
  m[3,4] == 50  # TRUE#
  m[4,6] == 73  # TRUE#
  m[2,4] + m[3,5] + m[4,2] == 335 # TRUE#
#
  m#
#
# demo(HNUTPP01)#
#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
 # solve with north-west corner rule#
  geo<- HNU.OR.TPP.NW(geo)   #
  x <- geo$transportplan # store transportplan in local variable#
  x[1,1] == 150   # TRUE#
  x[3,1] == 0     # TRUE#
  x[3,6] == 40    # TRUE#
  x[3,7] == 80    # TRUE#
  x[4,9] == 120   # TRUE#
# with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo)
?points
load_all()
with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo)
with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4)
with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4)
load_all()
with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4)
load_all()
with Transport ammounts#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2", zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4)
with Transport ammounts#
# #
#
col<- 2:5#
#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2",bg.col = col, zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4, arrow.point.bg = col)
load_all()
with Transport ammounts#
# #
#
col<- 2:5#
#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2",bg.col = col, zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4, arrow.point.bg = col)
load_all()
with Transport ammounts#
# #
#
col<- 2:5#
#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2",bg.col = col, zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4, arrow.point.bg = col)
with Transport ammounts#
# #
#
col<- 2:5#
#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2",warehouses.bg.col = col, zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4, arrow.point.bg = col)
m <- matrix(c(2,2,NA,NULL), nrow=2, byrow=TRUE)
m <- matrix(c(2,2,NA,4), nrow=2, byrow=TRUE)
m
m[1,3] <- NULL
m[1,2] <- NULL
is.na(m)
sum(is.na(m))
m <- matrix(c(1,2,3,4,2,3,4,5,3,4,5,6,4,5,6,7), nrow=4, byrow=TRUE)
m
d <- 5:9
d
d <- 1:4
d
m*d
m*t(d)
m
t(m)*d
m <- matrix(c(1:4,3:6,10:14,20:24), nrow=4, byrow=TRUE)
m <- matrix(c(1:4,3:7,10:14,20:24), nrow=4, byrow=TRUE)
m <- matrix(c(1:4,3:8,10:14,20:24), nrow=4, byrow=TRUE)
m
d<-1:5
m*d
t(m)*d
t(t(m)*d)
m
k<- 100000000000000000
geo<-HNU.OR.TPP.CMM()
geo<-HNU.OR.TPP.CMM(geo)
check()
load_all()
HNU.OR.TPP.CMM()
HNU.OR.TPP.CMM(geo)
geo
Setup is taken from: WS13/14 HNU OR-Tutorium#
# Working.Paper 2 Case Study 2 #
  geo<-HNUGeoSituation.create()#
  geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
  geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
  geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
  geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
  geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
  geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
  geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
  geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
  geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
  geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
 # solve with north-west corner rule#
  geo<- HNU.OR.TPP.NW(geo)   #
  x <- geo$transportplan # store transportplan in local variable#
  # x[1,1] == 150   # TRUE#
  # x[3,1] == 0     # TRUE#
  # x[3,6] == 40    # TRUE#
  # x[3,7] == 80    # TRUE#
  # x[4,9] == 120   # TRUE#
  col<- 2:5#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2",warehouses.bg.col = col, zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4, arrow.point.bg = col)
x
check()
demo(HNUTPP02)
geo
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
x<-sam
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
load_all()
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
load_all()
geo<- HNU.OR.TPP.CMM(geo)
geo$transportplan
x<-geo$transportplan
sum(x)
sum(sapply(object$warehouses, function(o){o$supply}))
sum(sapply(geo$warehouses, function(o){o$supply}))
context("Testing HNU OR TPP Column-Minium-Method")  #
context("\tTest 01: is procedure 'Column-Minium-Method' working correctly?") #
test_that("'Column-Minium-Method' works correctly", {#
 	geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.CMM(geo)  #
 	x <- geo$transportplan#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)#
 	expect_true(sum(x) == sum(sapply(object$customers, function(o){o$demand})))#
 	expect_true(sum(x) == sum(sapply(object$warehouses, function(o){o$supply})))#
}) #
#
context("done.")   #
context("--------------------------------------------------")
context("Testing HNU OR TPP Column-Minium-Method")  #
context("\tTest 01: is procedure 'Column-Minium-Method' working correctly?") #
test_that("'Column-Minium-Method' works correctly", {#
 	geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.CMM(geo)  #
 	x <- geo$transportplan#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)#
#
 	demand <- sapply(object$customers, function(o){o$demand})#
 	supply <- sapply(object$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
}) #
#
context("done.")   #
context("--------------------------------------------------")
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.CMM(geo)  #
 	x <- geo$transportplan#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)#
#
 	demand <- sapply(object$customers, function(o){o$demand})#
 	supply <- sapply(object$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))
geo
context("Testing HNU OR TPP Column-Minium-Method")  #
context("\tTest 01: is procedure 'Column-Minium-Method' working correctly?") #
test_that("'Column-Minium-Method' works correctly", {#
 	geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.CMM(geo)  #
 	x <- geo$transportplan#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)#
#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
}) #
#
context("done.")   #
context("--------------------------------------------------")
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.CMM(geo)  #
 	x <- geo$transportplan#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)#
#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.CMM(geo)  #
 	x <- geo$transportplan#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)#
#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)
warnings()
load_all()
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 150)#
	expect_true(x[3,1] == 0)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,5] == 80)#
 	expect_true(x[4,8] == 20)
x
context("Testing HNU OR TPP Matrix-Minium-Method")  #
context("\tTest 01: is procedure 'Matrix-Minium-Method' working correctly?") #
test_that("'Matrix-Minium-Method' works correctly", {#
 	geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 0)#
	expect_true(x[3,1] == 130)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,4] == 120)#
 	expect_true(x[4,8] == 120)#
}) #
#
context("done.")   #
context("--------------------------------------------------")
geo<-HNUGeoSituation.create()#
	geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
	geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
	geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
	geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
	geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
	geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
	geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
	geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
	geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
	geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
	geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   )) #
	geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
	# NO changes here  #
	geo<- HNU.OR.TPP.MMM(geo)  #
 	x <- geo$transportplan#
 	demand <- sapply(geo$customers, function(o){o$demand})#
 	supply <- sapply(geo$warehouses, function(o){o$supply})#
 	expect_true(sum(x) == sum(demand))#
 	expect_true(sum(x) == sum(supply))#
	expect_true(x[1,1] == 0)#
	expect_true(x[3,1] == 130)#
	expect_true(x[3,6] == 0)#
 	expect_true(x[3,4] == 120)#
 	expect_true(x[4,8] == 120)
solve with column-mimimum-method use domschke.version = 1995 #
  geo<- HNU.OR.TPP.CMM(geo, domschke.version = 1995)   #
#
  x <- geo$transportplan # store transportplan in local variable
load_all()
solve with column-mimimum-method use domschke.version = 1995 #
  geo<- HNU.OR.TPP.CMM(geo, domschke.version = 1995)   #
#
  x <- geo$transportplan # store transportplan in local variable
load_all()
solve with column-mimimum-method use domschke.version = 1995 #
  geo<- HNU.OR.TPP.CMM(geo, domschke.version = 1995)   #
#
  x <- geo$transportplan # store transportplan in local variable
x
Setup is taken from: WS13/14 HNU OR-Tutorium#
# Working.Paper 2 Case Study 2 #
  geo<-HNUGeoSituation.create()#
  geo<-add(geo,new("HNUWarehouse", id="L1", x=25,   y=70,   supply = 350   ))#
  geo<-add(geo,new("HNUWarehouse", id="L2", x=150,  y=115,  supply = 450   ))#
  geo<-add(geo,new("HNUWarehouse", id="L3", x=80,   y=140,  supply = 300   ))#
  geo<-add(geo,new("HNUWarehouse", id="L4", x=160,  y=10,   supply = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K1", x=15,   y=130,  demand = 150   ))#
  geo<-add(geo,new("HNUCustomer",  id="K2", x=60,   y=80,   demand = 300   ))#
  geo<-add(geo,new("HNUCustomer",  id="K3", x=175,  y=140,  demand = 180   ))#
  geo<-add(geo,new("HNUCustomer",  id="K4", x=50,   y=100,  demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K5", x=30,   y=40,   demand = 100   ))#
  geo<-add(geo,new("HNUCustomer",  id="K6", x=140,  y=80,   demand = 40    ))#
  geo<-add(geo,new("HNUCustomer",  id="K7", x=100,  y=15,   demand = 80    ))#
  geo<-add(geo,new("HNUCustomer",  id="K8", x=155,  y=55,   demand = 120   ))#
  geo<-add(geo,new("HNUCustomer",  id="K9", x=125,  y=145,  demand = 130   ))#
 # solve with column-mimimum-method use default domschke.version = 2007  #
  geo<- HNU.OR.TPP.CMM(geo)   #
  x <- geo$transportplan # store transportplan in local variable#
   x[1,1] == 150   # TRUE#
   x[3,1] == 0     # TRUE#
   x[3,6] == 40    # TRUE#
   x[3,7] == 80    # TRUE#
   x[4,9] == 120   # TRUE#
  col<- 2:5#
  plotGeoSituation(geo, main="Tutorium #2 WS 13/14 - Aufg. 2",warehouses.bg.col = col, zoom=1.7, plotNodes=FALSE,plotGrid=FALSE)#
  plotGeoSituation.transportplan(geo, arrow.point.cex = 4, arrow.point.bg = col)#
 # solve with column-mimimum-method use domschke.version = 1995 #
  geo<- HNU.OR.TPP.CMM(geo, domschke.version = 1995)   #
#
  x <- geo$transportplan # store transportplan in local variable#
   x[1,1] == 150   # TRUE#
   x[3,1] == 0     # TRUE#
   x[3,6] == 0    # TRUE#
   x[3,5] == 100    # TRUE#
   x[4,9] == 0     # TRUE
test()
for(i in 1:5){#
	cat(i, "\n")#
	if(i >3) break#
#
}
for(i in 1:5){#
	cat(i, "\n")#
	if(i >=3) break#
#
}
N<- 10
m<- matrix(rep(c(NA,NA), N), ncol=2, byrow = TRUE)
m
data.frame(m)
m<- matrix(rep(c(NA,NA), N), ncol=2, byrow = TRUE)#
 	colnames(m) <- c("d","p")#
 	data.frame(m)
m<- matrix(rep(c(NA,NA), N), ncol=2, byrow = TRUE)#
 	colnames(m) <- c("d","p")#
 	m<- data.frame(m)
m
m<- matrix(rep(rep(c(NA,NA), N),N), ncol=2*N, byrow = TRUE)#
 	colnames(m) <- c("d","p")#
 	m<- data.frame(m)
m<- matrix(rep(rep(c(NA,NA), N),N), ncol=2*N, byrow = TRUE)#
 	colnames(m) <- paste(c("d","p"), 1:N, sep = "")#
 	m<- data.frame(m)
m
paste(c("d","p"), 1:N, sep = "")
colnames(m) <- paste(c("d","p"), rep(1:N,2), sep = "")
m
m<- data.frame(a = 1, b =2)
x <- data.frame(a=2, b = 4)
rbind(m, x)
check()
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-geo.add(n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-geo.add(n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-geo.add(n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-geo.add(n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-geo.add(l1)#
geo<-geo.add(l2)#
geo<-geo.add(l3)#
geo<-geo.add(l4)
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)
load_all()
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)#
#
plotGeoSituation(geo, main="random shortest path problem")
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)#
#
plotGeoSituation(geo, main="random shortest path problem", plotLinks=TRUE, plotNodes=TRUE)
load_all()
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)#
#
plotGeoSituation(geo, main="random shortest path problem", plotLinks=TRUE, plotNodes=TRUE)
plotGeoSituation(geo, main="random shortest path problem")
plotGeoSituation(geo, main="random shortest path problem")
plotGeoSituation(geo, main="random shortest path problem")
plot.new()
dev.new()
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)#
geo <- HNU.OR.SPP.Dijkstra(geo,log=TRUE, plot=TRUE, main="random shortest path problem"))
geo <- HNU.OR.SPP.Dijkstra(geo,log=TRUE, plot=TRUE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,log=TRUE, plot=TRUE, main="random shortest path problem")
plotGeoSituation(geo, main="random shortest path problem")
load_all()
load_all()
check()
load_all()
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)#
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=TRUE, main="random shortest path problem")
load_all()
create 4 Nodes#
geo<-HNUGeoSituation.create()#
#
n1<- HNUNode.create(id = "n1", x=10, y=20)#
geo<-add(geo,n1)#
n2<- HNUNode.create(id = "n2",x=13, y=24)#
geo<-add(geo,n2)#
n3<- new("HNUNode", id = "n3",x=7, y=16)#
geo<-add(geo,n3)#
n4<- new("HNUNode", id = "n4",x=7, y=20)#
geo<-add(geo,n4)#
l1 <- HNULink.create(n1,n2)#
l2 <- HNULink.create(n1,n3)#
l3 <- HNULink.create(n1,n4)#
l4 <- HNULink.create(n3,n4)#
#
geo<-add(geo,l1)#
geo<-add(geo,l2)#
geo<-add(geo,l3)#
geo<-add(geo,l4)#
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=TRUE, main="random shortest path problem")
links <- geo$links
links
sapply(links, function(o){if(o$origin$id=="n3" & o$destination$id =="n4") return(o)})
conn <- c("n3", "n4")#
#
sapply(links, function(o){if(o$origin$id==conn[1] & o$destination$id ==conn[2]) return(o)})
conn <- c("n3", "n4")#
#
li <- sapply(links, function(o){if(o$origin$id==conn[1] & o$destination$id ==conn[2]) return(o)})#
#
delete.NULLs  <-  function(x.list){   # delele null/empty entries in a list#
    x.list[unlist(lapply(x.list, length) != 0)]#
}#
#
delete.NULLs(li)
class(conn)
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=TRUE, plot=FALSE, main="random shortest path problem")
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
?plot
load_all()
?plot
load_all()
check()
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
x<- data.frame(x=1, y=2)
x
cbind(x,x)
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
load_all()
geo <- HNU.OR.SPP.Dijkstra(geo,start=3, log=FALSE, plot=TRUE, main="random shortest path problem")
geo$shortestpath$finaltableau
